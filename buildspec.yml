version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12 
    commands:
      - echo "Install dependencies..."
      - pip install --upgrade pip
      - cd lambda_generate
      - pip install -r requirements.txt -t .
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
  build:
    commands:
      - pwd
      - echo Build started on `date`
      - echo Building the Docker image...
      - echo "CODEBUILD_RESOLVED_SOURCE_VERSION: ${CODEBUILD_RESOLVED_SOURCE_VERSION}" # 이 부분 추가
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - docker build -t ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG} .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}
      - printf '[{"name":"%s","imageUri":"%s"}]' "${CONTAINER_NAME}" "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}" > imagedefinitions.json
artifacts:
  files: imagedefinitions.json